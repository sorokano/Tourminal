#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.239
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elcondor.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class TourViewDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertTblTourView(TblTourView instance);
    partial void UpdateTblTourView(TblTourView instance);
    partial void DeleteTblTourView(TblTourView instance);
    #endregion
		
		public TourViewDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourViewDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourViewDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourViewDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblTourView> TblTourView
		{
			get
			{
				return this.GetTable<TblTourView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TblTourView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private System.Data.Linq.Binary _ThumbImage;
		
		private System.Nullable<bool> _IsExcursion;
		
		private System.Nullable<bool> _IsCruise;
		
		private string _Name;
		
		private string _RegionNames;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbImageChanging(System.Data.Linq.Binary value);
    partial void OnThumbImageChanged();
    partial void OnIsExcursionChanging(System.Nullable<bool> value);
    partial void OnIsExcursionChanged();
    partial void OnIsCruiseChanging(System.Nullable<bool> value);
    partial void OnIsCruiseChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegionNamesChanging(string value);
    partial void OnRegionNamesChanged();
    #endregion
		
		public TblTourView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ThumbImage
		{
			get
			{
				return this._ThumbImage;
			}
			set
			{
				if ((this._ThumbImage != value))
				{
					this.OnThumbImageChanging(value);
					this.SendPropertyChanging();
					this._ThumbImage = value;
					this.SendPropertyChanged("ThumbImage");
					this.OnThumbImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExcursion", DbType="Bit")]
		public System.Nullable<bool> IsExcursion
		{
			get
			{
				return this._IsExcursion;
			}
			set
			{
				if ((this._IsExcursion != value))
				{
					this.OnIsExcursionChanging(value);
					this.SendPropertyChanging();
					this._IsExcursion = value;
					this.SendPropertyChanged("IsExcursion");
					this.OnIsExcursionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCruise", DbType="Bit")]
		public System.Nullable<bool> IsCruise
		{
			get
			{
				return this._IsCruise;
			}
			set
			{
				if ((this._IsCruise != value))
				{
					this.OnIsCruiseChanging(value);
					this.SendPropertyChanging();
					this._IsCruise = value;
					this.SendPropertyChanged("IsCruise");
					this.OnIsCruiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionNames", CanBeNull=false)]
		public string RegionNames
		{
			get
			{
				return this._RegionNames;
			}
			set
			{
				if ((this._RegionNames != value))
				{
					this.OnRegionNamesChanging(value);
					this.SendPropertyChanging();
					this._RegionNames = value;
					this.SendPropertyChanged("RegionNames");
					this.OnRegionNamesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
